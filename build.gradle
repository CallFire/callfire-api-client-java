buildscript {
    repositories {
        jcenter()
    }
}

apply plugin: 'idea'
apply plugin: 'java'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    jcenter()
}

processResources {
    expand(project.properties)
}

// artifacts build config
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from {
        sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from {
        javadoc.destinationDir
    }
}

task clientFatJar(type: Jar, dependsOn: jar) {
    classifier = 'all'
    from {
        [
            sourceSets.main.output,
            configurations.runtime.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        ]
    }
}

tasks.withType(Jar) {
    //noinspection GroovyAssignabilityCheck
    manifest {
        //noinspection GroovyAssignabilityCheck
        attributes(
            'Manifest-Version': '1.0',
            'Implementation-Title': project.name,
            'Implementation-Version': version,
            'Implementation-Build-Number': buildNumber(),
            'Implementation-Vendor': 'Callfire, Inc.',
            'Implementation-Build-Date': new Date().format('yyyy-MM-dd'),
            'Documentation': 'https://developers.callfire.com',
            'Repository': 'https://github.com/CallFire/callfire-api-client-java'
        )
    }
    into('META-INF') {
        from 'LICENSE'
    }
}

build.dependsOn javadoc

artifacts {
    archives sourcesJar
    archives javadocJar
    archives clientFatJar
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.1'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.1'

    compile 'org.apache.httpcomponents:httpclient:4.5'
    compile 'org.apache.httpcomponents:httpmime:4.5'
    compile 'org.apache.commons:commons-lang3:3.4'

    testCompile('junit:junit:4.12') {
        exclude module: 'hamcrest'
        exclude module: 'hamcrest-core'
    }
    testCompile("org.mockito:mockito-core:1.+") {
        exclude module: 'hamcrest'
        exclude module: 'hamcrest-core'
    }
    testCompile 'org.hamcrest:hamcrest-all:1.3'
}

idea {
    module {
        downloadJavadoc = true
    }
}

/**
 * Get build number from system properties. Used in Jenkins env
 *
 * @return build number if passed as system property
 */
def buildNumber() {
    String buildNumber = System.properties[ 'BUILD_NUMBER' ] ?: "SNAPSHOT"

    "$buildNumber"
}